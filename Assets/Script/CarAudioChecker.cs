using UnityEngine;

public class CarAudioChecker : MonoBehaviour
{
    [Header("Car Audio Debug")]
    public bool showDebugInfo = true;
    public bool fixAudioIssues = true;
    
    private AudioSource[] allAudioSources;
    private AudioSource carEngineAudio;
    
    private void Start()
    {
        // T√¨m t·∫•t c·∫£ AudioSource trong scene
        allAudioSources = FindObjectsOfType<AudioSource>();
        
        // T√¨m AudioSource c·ªßa xe (th∆∞·ªùng l√† PlayerCarController)
        PlayerCarController playerCar = FindObjectOfType<PlayerCarController>();
        if (playerCar != null && playerCar.audioSource != null)
        {
            carEngineAudio = playerCar.audioSource;
        }
        
        // Ki·ªÉm tra v√† fix audio issues
        if (fixAudioIssues)
        {
            FixAudioIssues();
        }
        
        if (showDebugInfo)
        {
            DebugAudioInfo();
        }
    }
    
    private void FixAudioIssues()
    {
        // ƒê·∫£m b·∫£o AudioSource c·ªßa xe ho·∫°t ƒë·ªông
        if (carEngineAudio != null)
        {
            carEngineAudio.enabled = true;
            carEngineAudio.playOnAwake = true;
            carEngineAudio.volume = Mathf.Max(carEngineAudio.volume, 0.3f); // Gi·∫£m volume xe
            carEngineAudio.priority = 128; // ∆Øu ti√™n th·∫•p h∆°n nh·∫°c n·ªÅn
            carEngineAudio.spatialBlend = 1f; // 3D sound (theo v·ªã tr√≠ xe)
            
            Debug.Log("‚úÖ ƒê√£ fix AudioSource c·ªßa xe");
        }
        
        // ƒê·∫£m b·∫£o AudioManager kh√¥ng ·∫£nh h∆∞·ªüng xe
        if (AudioManager.Instance != null && AudioManager.Instance.musicSource != null)
        {
            AudioManager.Instance.musicSource.priority = 128; // ∆Øu ti√™n th·∫•p h∆°n xe
            AudioManager.Instance.musicSource.volume = Mathf.Min(AudioManager.Instance.musicSource.volume, 0.7f);
            
            Debug.Log("‚úÖ ƒê√£ ƒëi·ªÅu ch·ªânh AudioManager kh√¥ng ·∫£nh h∆∞·ªüng xe");
        }
    }
    
    private void DebugAudioInfo()
    {
        Debug.Log("üîç AUDIO DEBUG INFO:");
        Debug.Log($"T·ªïng s·ªë AudioSource trong scene: {allAudioSources.Length}");
        
        if (carEngineAudio != null)
        {
            Debug.Log($"Xe AudioSource: {carEngineAudio.name} - Enabled: {carEngineAudio.enabled} - Volume: {carEngineAudio.volume}");
        }
        
        if (AudioManager.Instance != null)
        {
            if (AudioManager.Instance.musicSource != null)
            {
                Debug.Log($"‚úÖ Nh·∫°c n·ªÅn AudioSource: {AudioManager.Instance.musicSource.name} - Volume: {AudioManager.Instance.musicSource.volume}");
            }
            else
            {
                Debug.LogWarning("‚ö†Ô∏è AudioManager kh√¥ng c√≥ MusicSource!");
            }
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y AudioManager Instance!");
        }
        
        // Ki·ªÉm tra xem c√≥ AudioSource n√†o b·ªã t·∫Øt kh√¥ng
        foreach (AudioSource audio in allAudioSources)
        {
            if (!audio.enabled)
            {
                Debug.LogWarning($"‚ö†Ô∏è AudioSource b·ªã t·∫Øt: {audio.name}");
            }
        }
        
        // Li·ªát k√™ t·∫•t c·∫£ AudioSource
        for (int i = 0; i < allAudioSources.Length; i++)
        {
            Debug.Log($"AudioSource {i}: {allAudioSources[i].name} - Enabled: {allAudioSources[i].enabled}");
        }
    }
    
    // Ph∆∞∆°ng th·ª©c ƒë·ªÉ b·∫≠t l·∫°i ti·∫øng ƒë·ªông c∆°
    public void EnableCarEngine()
    {
        if (carEngineAudio != null)
        {
            carEngineAudio.enabled = true;
            carEngineAudio.volume = 0.5f; // Volume m·∫∑c ƒë·ªãnh
            Debug.Log("üîä ƒê√£ b·∫≠t l·∫°i ti·∫øng ƒë·ªông c∆°");
        }
    }
    
    // Ph∆∞∆°ng th·ª©c ƒë·ªÉ t·∫Øt nh·∫°c n·ªÅn t·∫°m th·ªùi
    public void MuteBackgroundMusic()
    {
        if (AudioManager.Instance != null)
        {
            AudioManager.Instance.SetVolume(0f);
            Debug.Log("üîá ƒê√£ t·∫Øt nh·∫°c n·ªÅn");
        }
    }
    
    // Ph∆∞∆°ng th·ª©c ƒë·ªÉ b·∫≠t l·∫°i nh·∫°c n·ªÅn
    public void UnmuteBackgroundMusic()
    {
        if (AudioManager.Instance != null)
        {
            AudioManager.Instance.SetVolume(0.7f);
            Debug.Log("üîä ƒê√£ b·∫≠t l·∫°i nh·∫°c n·ªÅn");
        }
    }
}
